<?xml version="1.0" encoding="UTF-8"?>
<ivy-module version="2.0" xmlns:m="http://ant.apache.org/ivy/maven">
	<info organisation="io.micrometer"
		module="micrometer-core"
		revision="1.5.14"
		status="release"
		publication="20210512101349"
	>
		<license name="The Apache Software License, Version 2.0" url="http://www.apache.org/licenses/LICENSE-2.0.txt" />
		<description homepage="https://github.com/micrometer-metrics/micrometer">
		Application monitoring instrumentation facade
		</description>
		<m:properties__nebula_Module_Owner>tludwig@vmware.com</m:properties__nebula_Module_Owner>
		<m:properties__nebula_Created_By>15.0.2+7 (Oracle Corporation)</m:properties__nebula_Created_By>
		<m:properties__nebula_Module_Origin>git@github.com:micrometer-metrics/micrometer.git</m:properties__nebula_Module_Origin>
		<m:properties__nebula_Build_Id>LOCAL</m:properties__nebula_Build_Id>
		<m:properties__nebula_Module_Source>/micrometer-core</m:properties__nebula_Module_Source>
		<m:properties__nebula_Module_Email>tludwig@vmware.com</m:properties__nebula_Module_Email>
		<m:properties__nebula_Built_By>circleci</m:properties__nebula_Built_By>
		<m:properties__nebula_Change>72f3d59</m:properties__nebula_Change>
		<m:properties__nebula_Gradle_Version>6.9</m:properties__nebula_Gradle_Version>
		<m:properties__nebula_X_Compile_Target_JDK>1.8</m:properties__nebula_X_Compile_Target_JDK>
		<m:properties__nebula_Build_Date>2021-05-12_04:41:09</m:properties__nebula_Build_Date>
		<m:properties__nebula_Built_OS>Linux</m:properties__nebula_Built_OS>
		<m:properties__nebula_Build_Java_Version>15.0.2</m:properties__nebula_Build_Java_Version>
		<m:properties__nebula_Implementation_Version>1.5.14</m:properties__nebula_Implementation_Version>
		<m:properties__nebula_Branch>72f3d599cab692dff3b1600f152529591fe9a6ff</m:properties__nebula_Branch>
		<m:properties__nebula_Build_Host>dd1fbe68cfe8</m:properties__nebula_Build_Host>
		<m:properties__nebula_X_Compile_Source_JDK>1.8</m:properties__nebula_X_Compile_Source_JDK>
		<m:properties__nebula_Implementation_Title>io.micrometer#micrometer-core;1.5.14</m:properties__nebula_Implementation_Title>
		<m:properties__nebula_Built_Status>integration</m:properties__nebula_Built_Status>
		<m:properties__nebula_Build_Number>LOCAL</m:properties__nebula_Build_Number>
		<m:properties__nebula_Build_Job>LOCAL</m:properties__nebula_Build_Job>
		<m:properties__nebula_Manifest_Version>1.0</m:properties__nebula_Manifest_Version>
	</info>
	<configurations>
		<conf name="default" visibility="public" description="runtime dependencies and master artifact can be used with this conf" extends="runtime,master"/>
		<conf name="master" visibility="public" description="contains only the artifact published by this module itself, with no transitive dependencies"/>
		<conf name="compile" visibility="public" description="this is the default scope, used if none is specified. Compile dependencies are available in all classpaths."/>
		<conf name="provided" visibility="public" description="this is much like compile, but indicates you expect the JDK or a container to provide it. It is only available on the compilation classpath, and is not transitive."/>
		<conf name="runtime" visibility="public" description="this scope indicates that the dependency is not required for compilation, but is for execution. It is in the runtime and test classpaths, but not the compile classpath." extends="compile"/>
		<conf name="test" visibility="public" description="this scope indicates that the dependency is not required for normal use of the application, and is only available for the test compilation and execution phases." extends="runtime"/>
		<conf name="system" visibility="public" description="this scope is similar to provided except that you have to provide the JAR which contains it explicitly. The artifact is always available and is not looked up in a repository."/>
		<conf name="sources" visibility="public" description="this configuration contains the source artifact of this module, if any."/>
		<conf name="javadoc" visibility="public" description="this configuration contains the javadoc artifact of this module, if any."/>
		<conf name="optional" visibility="public" description="contains all optional dependencies"/>
	</configurations>
	<publications>
		<artifact name="micrometer-core" type="jar" ext="jar" conf="master"/>
		<artifact name="micrometer-core" type="source" ext="jar" conf="sources" m:classifier="sources"/>
		<artifact name="micrometer-core" type="javadoc" ext="jar" conf="javadoc" m:classifier="javadoc"/>
	</publications>
	<dependencies>
		<dependency org="org.hdrhistogram" name="HdrHistogram" rev="2.1.12" force="true" conf="compile->compile(*),master(*);runtime->runtime(*)"/>
		<dependency org="org.latencyutils" name="LatencyUtils" rev="2.0.3" force="true" conf="runtime->compile(*),runtime(*),master(*)">
			<exclude org="org.hdrhistogram" module="HdrHistogram" name="*" type="*" ext="*" conf="" matcher="exact"/>
		</dependency>
		<dependency org="com.google.code.findbugs" name="jsr305" rev="3.0.2" force="true" conf="optional->compile(*),master(*)"/>
		<dependency org="io.dropwizard.metrics" name="metrics-core" rev="4.0.7" force="true" conf="optional->compile(*),master(*)"/>
		<dependency org="com.google.guava" name="guava" rev="29.0-jre" force="true" conf="optional->compile(*),master(*)"/>
		<dependency org="com.github.ben-manes.caffeine" name="caffeine" rev="2.8.2" force="true" conf="optional->compile(*),master(*)"/>
		<dependency org="net.sf.ehcache" name="ehcache" rev="2.10.6" force="true" conf="optional->compile(*),master(*)"/>
		<dependency org="javax.cache" name="cache-api" rev="1.1.1" force="true" conf="optional->compile(*),master(*)"/>
		<dependency org="com.hazelcast" name="hazelcast" rev="4.0.1" force="true" conf="optional->compile(*),master(*)"/>
		<dependency org="org.hibernate" name="hibernate-entitymanager" rev="6.0.0.Alpha5" force="true" conf="optional->compile(*),master(*)"/>
		<dependency org="org.eclipse.jetty" name="jetty-server" rev="9.4.28.v20200408" force="true" conf="optional->compile(*),master(*)"/>
		<dependency org="org.eclipse.jetty" name="jetty-client" rev="9.4.28.v20200408" force="true" conf="optional->compile(*),master(*)"/>
		<dependency org="org.apache.tomcat.embed" name="tomcat-embed-core" rev="8.5.54" force="true" conf="optional->compile(*),master(*)"/>
		<dependency org="org.apache.httpcomponents" name="httpclient" rev="4.5.12" force="true" conf="optional->compile(*),master(*)"/>
		<dependency org="org.apache.httpcomponents" name="httpasyncclient" rev="4.1.4" force="true" conf="optional->compile(*),master(*)"/>
		<dependency org="com.netflix.hystrix" name="hystrix-core" rev="1.5.12" force="true" conf="optional->compile(*),master(*)"/>
		<dependency org="ch.qos.logback" name="logback-classic" rev="1.2.3" force="true" conf="optional->compile(*),master(*)"/>
		<dependency org="org.apache.logging.log4j" name="log4j-core" rev="2.13.2" force="true" conf="optional->compile(*),master(*)"/>
		<dependency org="io.projectreactor" name="reactor-core" rev="3.3.17.RELEASE" force="true" conf="optional->compile(*),master(*)"/>
		<dependency org="io.projectreactor.netty" name="reactor-netty" rev="0.9.20.RELEASE" force="true" conf="optional->compile(*),master(*)"/>
		<dependency org="org.aspectj" name="aspectjweaver" rev="1.8.14" force="true" conf="optional->compile(*),master(*)"/>
		<dependency org="com.squareup.okhttp3" name="okhttp" rev="4.5.0" force="true" conf="optional->compile(*),master(*)"/>
		<dependency org="org.mongodb" name="mongo-java-driver" rev="3.12.3" force="true" conf="optional->compile(*),master(*)"/>
		<dependency org="org.jooq" name="jooq" rev="3.13.1" force="true" conf="optional->compile(*),master(*)"/>
		<dependency org="org.apache.kafka" name="kafka-clients" rev="2.5.0" force="true" conf="optional->compile(*),master(*)"/>
		<dependency org="org.apache.kafka" name="kafka-streams" rev="2.5.0" force="true" conf="optional->compile(*),master(*)"/>
	</dependencies>
</ivy-module>
